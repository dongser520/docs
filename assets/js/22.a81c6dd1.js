(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{425:function(v,_,o){"use strict";o.r(_);var t=o(24),e=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("前言")]),v._v(" "),_("blockquote",[_("p",[v._v("TIOBE 编程社区指数是一个衡量编程语言受欢迎程度的指标，评判的依据来自世界范围内的工程师、课程、供应商及搜索引擎，TIOBE 官网公布了 2025 年 5 月的编程语言排行榜，"),_("code",[v._v("Python")]),v._v(' 以25.35%的占比稳居编程语言榜首，与第二名C++拉开15%的差距，凭借简洁语法和广泛适用性"统治全球编程界"。因此，如果大家对这套最受欢迎的编程语言感兴趣，可以来学习一下本套课程。'),_("br"),v._v("\n关于 "),_("code",[v._v("Python")]),v._v(" 这里就不过多介绍了，感兴趣的同学可以去搜索一下关于 "),_("code",[v._v("Python")]),v._v("的相关介绍，接下来我们开始讲 "),_("code",[v._v("Python")]),v._v("的相关基础知识。")])]),v._v(" "),_("h2",{attrs:{id:"一、python环境搭建"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、python环境搭建"}},[v._v("#")]),v._v(" 一、Python环境搭建")]),v._v(" "),_("h3",{attrs:{id:"_1-下载python解释器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载python解释器"}},[v._v("#")]),v._v(" 1. 下载Python解释器")]),v._v(" "),_("p",[v._v("Python解释器下载地址，来到官网："),_("a",{attrs:{href:"https://www.python.org",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://www.python.org"),_("OutboundLink")],1),v._v(" (打开稍微有点慢，如果同学不想去官网下载，那么直接到群文件，本节课课件里面下载即可) "),_("br")]),v._v(" "),_("blockquote",[_("ol",[_("li",[_("code",[v._v("Download")]),v._v(" -> "),_("code",[v._v("根据你电脑操作系统选择（以windows 64位为例）")])]),v._v(" "),_("li",[_("code",[v._v("Python Releases for Windows")]),v._v(" windows系统Python解释器最新的版本 （一般我们不用最新的版本，因为新版本可能会有bug，所以选择一个比较稳定的版本）")]),v._v(" "),_("li",[v._v("比如选择 "),_("code",[v._v("Python 3.12.10")]),v._v(" (电脑操作系统必须高于window7，如果你的电脑是windows7，那么选择 "),_("code",[v._v("Python 3.8.10及以前的版本")]),v._v(")")]),v._v(" "),_("li",[v._v("点击 "),_("code",[v._v("Download Windows installer (64-bit)")])])]),v._v(" "),_("blockquote",[_("p",[v._v("如果有同学不知道下载32位还是64位的，可以这么操作：")]),v._v(" "),_("blockquote",[_("ol",[_("li",[_("code",[v._v("开始")]),v._v(" -> "),_("code",[v._v("此电脑")]),v._v(" -> "),_("code",[v._v("鼠标右键 属性")]),v._v(" -> "),_("code",[v._v("查看系统类型")]),v._v("（你是32位的就下载32位，是64位的就下载64位）")])])])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("如果是"),_("code",[v._v("macOS")]),v._v("系统，那么选择 "),_("code",[v._v("Download macOS 64-bit universal2 installer")]),v._v("即可")])])]),v._v(" "),_("h3",{attrs:{id:"_2-python解释器多版本共存问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-python解释器多版本共存问题"}},[v._v("#")]),v._v(" 2. Python解释器多版本共存问题")]),v._v(" "),_("blockquote",[_("p",[v._v("我们知道，我们前面课程学习"),_("code",[v._v("node.js")]),v._v("的时候，我们的"),_("code",[v._v("node")]),v._v("存在很多个版本，而有时候我们需要切换node版本，同样的，我们的"),_("code",[v._v("Python解释器")]),v._v("也是有很多版本，我们刚刚下载的是"),_("code",[v._v("Python 3.x")]),v._v("的版本，比如我现在又有一个"),_("code",[v._v("Python 2.7.18")]),v._v("的版本（这个版本下载比较费时大家耐心等待，不想等待的可以去群里面下载），那么我们如何让Python解释器多版本共存呢？"),_("br")]),v._v(" "),_("ol",[_("li",[v._v("先安装 "),_("code",[v._v("Python 2.7.18")]),v._v(" 解释器")])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("安装 "),_("code",[v._v("Python 2.7.18")]),v._v(" 解释器")])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("双击安装 -> "),_("code",[v._v("Install for all users(为本电脑所有用户安装)")]),v._v(" -> "),_("code",[v._v("Next(下一步)")]),v._v(" -> "),_("code",[v._v("选择安装路径，默认C盘，可以改到D盘（D:\\Python27\\）(D盘会产生一个Python27的文件夹)")]),v._v(" -> "),_("code",[v._v("Next(下一步)")]),v._v(" -> "),_("code",[v._v("注意：勾选Add Python.exe to PATH(添加Python.exe就是Python解释器程序到环境变量PATH中)")]),v._v("  -> "),_("code",[v._v("如果不勾选，直接Next(下一步)")]),v._v(" -> "),_("code",[v._v("等待安装")]),v._v(" -> "),_("code",[v._v("Finish(完成)")])])])])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("分析安装的 "),_("code",[v._v("Python 2.7.18")]),v._v(" 解释器")])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("在 "),_("code",[v._v("D:\\Python27\\Scripts\\pip.exe")]),v._v("文件，这个"),_("code",[v._v("pip.exe")]),v._v("文件是用来帮我们安装别人写好的第三方模块或者别人写好的Python代码，类似我们"),_("code",[v._v("node")]),v._v("里面的"),_("code",[v._v("npm")]),v._v("。这里面有 "),_("code",[v._v("pip.exe")]),v._v("、"),_("code",[v._v("pip2.exe")]),v._v("、"),_("code",[v._v("pip2.7.exe")]),v._v("，其实它们三个文件是一模一样的，只是取了不同的名字，也就是你运行"),_("code",[v._v("pip")]),v._v("、"),_("code",[v._v("pip2")]),v._v("、"),_("code",[v._v("pip2.7")]),v._v("都是一样的。")]),v._v(" "),_("li",[v._v("在 "),_("code",[v._v("D:\\Python27\\python.exe")]),v._v("文件，这个"),_("code",[v._v("python.exe")]),v._v("文件就是我们安装的Python解释器。")])])]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("我们接着安装 "),_("code",[v._v("Python 3.12.10")]),v._v(" 解释器")])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("双击安装"),_("code",[v._v("python-3.12.10-amd64.exe")])])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("提示 "),_("code",[v._v("Install Now")]),v._v("(默认安装)")]),v._v(" "),_("li",[v._v("提示 "),_("code",[v._v("Add Python 3.12 to PATH")]),v._v(" (添加Python到环境变量)，我们选择 "),_("code",[v._v("Add Python 3.12 to PATH")]),v._v(" (正常安装我们应该勾选)，为了方便教学，我们这里先不勾选")]),v._v(" "),_("li",[v._v("提示 "),_("code",[v._v("Customize Installation")]),v._v(" (自定义安装)，我们选择 "),_("code",[v._v("Customize Installation")])])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("用默认选项即可 -> "),_("code",[v._v("Next(下一步)")]),v._v("-> 来到 "),_("code",[v._v("Advanced Options")])]),v._v(" "),_("li",[v._v("勾选 "),_("code",[v._v("Install for all users(给当前电脑所有用户安装)")])]),v._v(" "),_("li",[v._v("再次提示 "),_("code",[v._v("Add Python to environment variables(添加Python到环境变量)")]),v._v("说明这个设置非常重要，但为了方便教学，我们这里先不勾选")]),v._v(" "),_("li",[_("code",[v._v("Customize install location(自定义安装位置)")]),v._v(" -> "),_("code",[v._v("默认 C:\\Program Files\\Python37，我们可以改到D盘或者其它盘也可以不改，D:\\Python37")]),v._v(" -> "),_("code",[v._v("Install（安装）")]),v._v(" -> "),_("code",[v._v("Close(关闭即可)")])])])])])]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("分析安装的 "),_("code",[v._v("Python 3.12.10")]),v._v(" 解释器")])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("在 "),_("code",[v._v("D:\\Python312\\Scripts\\pip.exe")]),v._v("文件，这个"),_("code",[v._v("pip.exe")]),v._v("文件是用来帮我们安装别人写好的第三方模块或者别人写好的Python代码，类似我们"),_("code",[v._v("node")]),v._v("里面的"),_("code",[v._v("npm")]),v._v("。这里面有 "),_("code",[v._v("pip.exe")]),v._v("、"),_("code",[v._v("pip3.exe")]),v._v("、"),_("code",[v._v("pip3.12.exe")]),v._v("，其实它们三个文件是一模一样的，只是取了不同的名字，也就是你运行"),_("code",[v._v("pip")]),v._v("、"),_("code",[v._v("pip3")]),v._v("、"),_("code",[v._v("pip3.12.exe")]),v._v("都是一样的。")]),v._v(" "),_("li",[v._v("在 "),_("code",[v._v("D:\\Python312\\python.exe")]),v._v("文件，这个"),_("code",[v._v("python.exe")]),v._v("文件就是我们安装的Python解释器。")])])]),v._v(" "),_("h3",{attrs:{id:"使用python解释器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用python解释器"}},[v._v("#")]),v._v(" 使用python解释器")]),v._v(" "),_("blockquote",[_("p",[v._v("和我们使用"),_("code",[v._v("node")]),v._v("一样, "),_("code",[v._v("开始")]),v._v(" -> "),_("code",[v._v("运行")]),v._v("(win + R) -> "),_("code",[v._v("cmd")]),v._v(" -> "),_("code",[v._v("默认打开的：C:\\Users\\Administrator>")]),v._v("是没有"),_("code",[v._v("python.exe")]),v._v("文件的，如果输入："),_("code",[v._v("python.exe")]),v._v(" 提示找不到，然后让你安装。")]),v._v(" "),_("ol",[_("li",[v._v("我们需要切换目录，我们知道python解释器我们安装在D盘，可以输入："),_("code",[v._v("d:")]),v._v("（英文冒号）, 切换盘符，直接盘符名加上冒号")]),v._v(" "),_("li",[v._v("在D盘 "),_("code",[v._v("D:\\>")]),v._v("，切换目录，用 "),_("code",[v._v("cd")]),v._v("，比如： "),_("code",[v._v("cd d:\\Python27")]),v._v(", 则来到 "),_("code",[v._v("D盘文件夹Python27里面了")])]),v._v(" "),_("li",[v._v("在"),_("code",[v._v("D盘文件夹Python27里面了")]),v._v("， "),_("code",[v._v("d:\\Python27>")]),v._v("，输入 "),_("code",[v._v("python 或者 python.exe")]),v._v(", 启动python解释器。 这个流程，相当于你用鼠标先找到D盘，然后找到Python27文件夹，然后双击python.exe文件，一样的道理。")]),v._v(" "),_("li",[v._v("输入 "),_("code",[v._v("exit()")]),v._v(" 退出的意思")]),v._v(" "),_("li",[v._v("同样 "),_("code",[v._v("Python 3.12.10")]),v._v(" 解释器也是这样操作")])])])]),v._v(" "),_("h3",{attrs:{id:"_3-python环境变量的配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-python环境变量的配置"}},[v._v("#")]),v._v(" 3. Python环境变量的配置")]),v._v(" "),_("blockquote",[_("p",[v._v("由于我们在前面安装Python的时候，多次提示要我们把Python加入到环境变量中，但是由于教学原因，我们一直没有加，那么不加入环境变量，会出现什么问题呢？"),_("br"),_("br"),v._v(" "),_("code",[v._v("出现的问题就是：")]),v._v(" 我们每次运行"),_("code",[v._v("Python")]),v._v(" 解释器，都需要和上节课一样，切换盘符，切换目录，然后双击"),_("code",[v._v("python.exe")]),v._v("文件或者输入"),_("code",[v._v("python")]),v._v("命令，这样太麻烦了，所以我们需要把Python加入到环境变量中，这样我们就可以直接在命令行中运行"),_("code",[v._v("Python")]),v._v("解释器了。"),_("br")]),v._v(" "),_("ol",[_("li",[_("code",[v._v("环境变量")]),v._v("简单说一下")])]),v._v(" "),_("blockquote",[_("p",[v._v("我们在前面学习"),_("code",[v._v("node")]),v._v(" 和 学习过"),_("code",[v._v("php")]),v._v("的同学，在我们第四期第1季课程，安装"),_("code",[v._v("thinkphp")]),v._v("框架，安装"),_("code",[v._v("composer")]),v._v("，都用到过环境变量。环境变量就是操作系统在当前文件夹下面，找不到你要运行的文件的时候，然后它会去你的环境变量里面依次检索，看看有没有这个文件，那么接下来我们就来配置一下环境变量。")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("配置环境变量")])]),v._v(" "),_("blockquote",[_("ol",[_("li",[_("code",[v._v("开始")]),v._v("->"),_("code",[v._v("我的电脑（此电脑）")]),v._v("->"),_("code",[v._v("鼠标右键")]),v._v("->"),_("code",[v._v("属性")]),v._v("->"),_("code",[v._v("高级系统设置")]),v._v("->"),_("code",[v._v("高级")]),v._v("->"),_("code",[v._v("环境变量")])]),v._v(" "),_("li",[_("code",[v._v("Administrator的用户变量")]),v._v(" 是只针对 "),_("code",[v._v("Administrator")]),v._v(" 这个用户，我们应该关注 "),_("code",[v._v("系统变量")]),v._v("，"),_("code",[v._v("系统变量")]),v._v("是针对所有用户都有效。")]),v._v(" "),_("li",[v._v("在 "),_("code",[v._v("系统变量")]),v._v(" 里面找到变量 "),_("code",[v._v("Path")]),v._v(", 这个"),_("code",[v._v("Path")]),v._v("就是环境变量")]),v._v(" "),_("li",[v._v("选中 "),_("code",[v._v("Path")]),v._v("， 然后点击下面的 "),_("code",[v._v("编辑")])]),v._v(" "),_("li",[_("code",[v._v("编辑环境变量")]),v._v("，先找到"),_("code",[v._v("Python27")]),v._v("里面的"),_("code",[v._v("python.exe")]),v._v("文件路径"),_("code",[v._v("D:\\Python27")]),v._v(", 然后 "),_("code",[v._v("新建")]),v._v("，把路径放进去，确定；"),_("br"),_("br"),v._v("\n接下来，我们不用在切换盘符和文件夹，直接在命令行里面输入"),_("code",[v._v("python")]),v._v("，就可以直接运行python了。"),_("br"),_("br")]),v._v(" "),_("li",[_("code",[v._v("Python3.x")]),v._v("的环境变量配置，和"),_("code",[v._v("Python2.x")]),v._v("一样，都是"),_("code",[v._v("Path")]),v._v("里面新建一个变量，然后把"),_("code",[v._v("python.exe")]),v._v("的路径放进去，然后确定。")])]),v._v(" "),_("blockquote",[_("p",[v._v("当我们在命令行里面输入"),_("code",[v._v("python")]),v._v("，运行的是"),_("code",[v._v("Python2.x")]),v._v("解释器，因此出现了Python解释器，多版本如何共存的问题")])])]),v._v(" "),_("h3",{attrs:{id:"python解释器多版本共存解决方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#python解释器多版本共存解决方案"}},[v._v("#")]),v._v(" Python解释器多版本共存解决方案")]),v._v(" "),_("p",[v._v("我们知道当我们在命令行里面输入"),_("code",[v._v("python")]),v._v("，由于当前路径没有python，那么就去环境变量里面找，而"),_("code",[v._v("Python2.x")]),v._v("解释器路径放在"),_("code",[v._v("Python3.x")]),v._v("的上面，因此会先执行"),_("code",[v._v("Python2.x")]),v._v("解释器。我们有些大聪明就会想到"),_("code",[v._v("Python3.x")]),v._v("的移到上面去，问题就是 "),_("code",[v._v("Python27")]),v._v("里面的"),_("code",[v._v("Python")]),v._v("解释器叫 "),_("code",[v._v("python.exe")]),v._v(", 而 "),_("code",[v._v("Python312")]),v._v("里面的"),_("code",[v._v("Python")]),v._v("解释器也叫 "),_("code",[v._v("python.exe")]),v._v("，因此，就是我把"),_("code",[v._v("Python3.x")]),v._v("移到到上面去，每次命令行里面输入"),_("code",[v._v("python")]),v._v("，它就执行"),_("code",[v._v("Python3")]),v._v(","),_("code",[v._v("Python2")]),v._v("又执行不了了。"),_("br"),_("br"),v._v("\n那如何处理呢？"),_("br"),_("br"),v._v("\n我们可以参考 "),_("code",[v._v("python")]),v._v("安装文件夹 "),_("code",[v._v("Scripts")]),v._v("里面操作pip的方式，把一个exe文件，复制多份，然后取不同的名字就可以了，"),_("span",{staticStyle:{"text-decoration":"underline",color:"green"}},[v._v("如 "),_("code",[v._v("Python27")]),v._v("里面的"),_("code",[v._v("python.exe")]),v._v("文件复制一份，取名"),_("code",[v._v("python2.exe")]),v._v("， 然后， "),_("code",[v._v("Python312")]),v._v("文件夹里面的"),_("code",[v._v("python.exe")]),v._v("文件复制一份，取名"),_("code",[v._v("python3.exe")])]),_("br"),_("br"),v._v("\n然后，"),_("span",{staticStyle:{"text-decoration":"underline"}},[v._v(" 你可以在命令行里面输入"),_("code",[v._v("python2")]),v._v("，则执行 "),_("code",[v._v("Python2.x")]),v._v("解释器，输入 "),_("code",[v._v("python3")]),v._v("，则执行 "),_("code",[v._v("Python3.x")]),v._v("解释器.")])]),v._v(" "),_("h3",{attrs:{id:"pip工具也是经常使用-也配置一下环境变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pip工具也是经常使用-也配置一下环境变量"}},[v._v("#")]),v._v(" pip工具也是经常使用，也配置一下环境变量")]),v._v(" "),_("p",[v._v("操作方式和上面一样")]),v._v(" "),_("blockquote",[_("ol",[_("li",[_("code",[v._v("开始")]),v._v("->"),_("code",[v._v("我的电脑（此电脑）")]),v._v("->"),_("code",[v._v("鼠标右键")]),v._v("->"),_("code",[v._v("属性")]),v._v("->"),_("code",[v._v("高级系统设置")]),v._v("->"),_("code",[v._v("高级")]),v._v("->"),_("code",[v._v("环境变量")])]),v._v(" "),_("li",[_("code",[v._v("Administrator的用户变量")]),v._v(" 是只针对 "),_("code",[v._v("Administrator")]),v._v(" 这个用户，我们应该关注 "),_("code",[v._v("系统变量")]),v._v("，"),_("code",[v._v("系统变量")]),v._v("是针对所有用户都有效。")]),v._v(" "),_("li",[v._v("在 "),_("code",[v._v("系统变量")]),v._v(" 里面找到变量 "),_("code",[v._v("Path")]),v._v(", 这个"),_("code",[v._v("Path")]),v._v("就是环境变量")]),v._v(" "),_("li",[v._v("选中 "),_("code",[v._v("Path")]),v._v("， 然后点击下面的 "),_("code",[v._v("编辑")])]),v._v(" "),_("li",[_("code",[v._v("编辑环境变量")]),v._v("，先找到"),_("code",[v._v("Python27/Scripts")]),v._v("里面的"),_("code",[v._v("pip2.exe")]),v._v("文件路径"),_("code",[v._v("D:\\Python27\\Scripts")]),v._v(", 然后 "),_("code",[v._v("新建")]),v._v("，把路径放进去，确定；"),_("br"),_("br")]),v._v(" "),_("li",[_("code",[v._v("编辑环境变量")]),v._v("，先找到"),_("code",[v._v("Python312/Scripts")]),v._v("里面的"),_("code",[v._v("pip3.exe")]),v._v("文件路径"),_("code",[v._v("D:\\Python312\\Scripts")]),v._v(", 然后 "),_("code",[v._v("新建")]),v._v("，把路径放进去，确定；"),_("br"),_("br")]),v._v(" "),_("li",[v._v("运行pip工具")])]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("命令行 输入 "),_("code",[v._v("pip2 -V")]),v._v(" 即pip2安装的第三方模块或者代码会在 "),_("code",[v._v("pip 19.2.3 from d:\\python27\\lib\\site-packages\\pip (python 2.7)")]),v._v(", 当然还有  "),_("code",[v._v("pip2 -v")]),v._v("  命令提示信息")]),v._v(" "),_("li",[v._v("命令行 输入 "),_("code",[v._v("pip3 -V")]),v._v(" 即pip3安装的第三方模块或者代码会在 "),_("code",[v._v("pip 25.0.1 from D:\\Python312\\Lib\\site-packages\\pip (python 3.12)")]),v._v(" , 当然还有  "),_("code",[v._v("pip3 -v")]),v._v(" 命令提示信息")])])])])]),v._v(" "),_("h2",{attrs:{id:"二、运行python程序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、运行python程序"}},[v._v("#")]),v._v(" 二、运行Python程序")]),v._v(" "),_("h3",{attrs:{id:"_1-直接在命令行运行python程序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-直接在命令行运行python程序"}},[v._v("#")]),v._v(" 1. 直接在命令行运行Python程序")]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("(win + R) 或者 "),_("code",[v._v("开始")]),v._v(" -> "),_("code",[v._v("运行")]),v._v(" 输入 "),_("code",[v._v("cmd")]),v._v(" 运行命令行")]),v._v(" "),_("li",[v._v("执行一个简单的python程序 "),_("br"),_("br"),v._v("\n比如打印："),_("code",[v._v("你好，迪丽热巴!")])])]),v._v(" "),_("blockquote",[_("div",{staticClass:"language-python extra-class"},[_("pre",{pre:!0,attrs:{class:"language-python"}},[_("code",[v._v("python3\n"),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">>")]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(">")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("print")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"你好，迪丽热巴!"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n")])])])]),v._v(" "),_("p",[v._v("上面这种在命令行输入代码，回车查看效果的方法称为 "),_("strong",[v._v("交互式解释")]),v._v("，即交互式解释器或者交互式环境。"),_("br"),_("br"),v._v(" "),_("code",[v._v("交互式环境")]),v._v(" 就是输入一行代码后，回车，可以立马看到运行结果。一般用于测试某一行代码的功能，但是这里写的代码不能保存，大家可以联想一下，我们当时学习"),_("code",[v._v("node")]),v._v("基础时候，也是可以这么运行的，可以类比。"),_("br"),_("br"),v._v("\n更多时候，我们是把代码写在文件里面，然后通过Python解释器运行代码，和我们的node一样。")]),v._v(" "),_("h3",{attrs:{id:"也可以把代码写在文件里面-然后在运行"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#也可以把代码写在文件里面-然后在运行"}},[v._v("#")]),v._v(" 也可以把代码写在文件里面，然后在运行")]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("比如，将代码写入记事本，内容为： "),_("code",[v._v('print("你好，迪丽热巴!")')]),v._v(", 记事本命名 "),_("code",[v._v("test.txt")]),v._v(" 放在D盘")]),v._v(" "),_("li",[v._v("命令行运行："),_("code",[v._v("d:")]),v._v(" 切到D盘，然后： "),_("code",[v._v("python3 test.txt")]),v._v("，也是打印："),_("code",[v._v("你好，迪丽热巴!")])]),v._v(" "),_("li",[v._v("或者命令行输入: "),_("code",[v._v("python3")]),v._v(" 然后把文件直接拖进来，回车也可以运行 "),_("br"),_("br"),v._v("\n我们运行的文件是"),_("code",[v._v("test.txt")]),v._v("，后缀是"),_("code",[v._v(".txt")]),v._v("，"),_("code",[v._v("可以看出python程序的文件后缀名，对我们运行程序是没有影响的")]),v._v("。"),_("br"),v._v("\n因为 python 程序是解释执行的，就是把文件打开，读取里面的内容，然后再解释执行，所以，只要文件里面的内容符合 python 语法，就可以执行，和后缀名是什么没有任何关系"),_("br"),_("br"),v._v(" "),_("b",[v._v("但是最好从规范上面来说，我们应该把"),_("code",[v._v("python")]),v._v(" 文件以 "),_("code",[v._v(".py")]),v._v(" 的后缀名保存。")])])])])]),v._v(" "),_("h2",{attrs:{id:"三、-python集成开发环境-ide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、-python集成开发环境-ide"}},[v._v("#")]),v._v(" 三、 Python集成开发环境（IDE）")]),v._v(" "),_("blockquote",[_("p",[v._v("在Python开发中，推荐的集成开发环境是 "),_("code",[v._v("pycharm")]),v._v(" "),_("a",{attrs:{href:"https://www.jetbrains.com.cn/pycharm/download/?section=windows",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://www.jetbrains.com.cn/pycharm/download/?section=windows"),_("OutboundLink")],1),v._v(" "),_("br"),_("br"),v._v(" "),_("code",[v._v("PyCharm Professional")]),v._v("专业版功能多，但是收费。"),_("br"),v._v(" "),_("code",[v._v("PyCharm Community Edition")]),v._v(" 社区版，免费，但功能少。"),_("br"),v._v("\n可以去某宝买一个注册码，或者网上找一个别人分享的注册码。"),_("br"),_("br"),v._v("\n但，还有一款我们都非常熟悉的IDE工具 "),_("code",[v._v("Visual Studio Code (VSCode)")]),v._v(". 前面几期的课程，大家已经用得非常熟练了"),_("br"),v._v("\nVisual Studio Code (VSCode) 完全可以用作 Python 的集成开发环境（IDE），并且是许多开发者首选的工具之一。以下是配置 VSCode 为 Python IDE 的关键步骤和必备插件：")]),v._v(" "),_("h3",{attrs:{id:"_1-基础配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础配置"}},[v._v("#")]),v._v(" 1. 基础配置")]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("安装 Python 解释器 "),_("br"),v._v("\n确保你的系统中已安装 Python（推荐 Python 3.7+）。 "),_("br")]),v._v(" "),_("li",[v._v("安装 VSCode\n相信能学到第五期的同学，绝对不是小白了，安装VSCode应该是轻松拿捏，如果实在不会，可以看我们 "),_("a",{attrs:{href:"https://study.163.com/course/courseLearn.htm?courseId=1213374826&share=2&shareId=480000002289674#/learn/video?lessonId=1285001250&courseId=1213374826",target:"_blank",title:"安装vscode(第一学期视频第4课)点击查看"}},[v._v("安装vscode(第一学期视频第4课)")])])])]),v._v(" "),_("h3",{attrs:{id:"_2-安装插件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装插件"}},[v._v("#")]),v._v(" 2. 安装插件")]),v._v(" "),_("p",[v._v("以下插件直接在 VSCode 的扩展市场（Ctrl+Shift+X）搜索安装：  "),_("br")]),v._v(" "),_("blockquote",[_("p",[_("b",[v._v(" (1) Python 官方扩展")]),v._v(" "),_("br"),v._v("\n名称: Python (由 Microsoft 发布) "),_("br"),v._v("\n功能: 提供 Python 语法高亮、代码补全、调试支持、虚拟环境管理、Jupyter Notebook 集成等核心功能。"),_("br"),v._v(" "),_("br"),v._v(" "),_("b",[v._v("(2) Pylance ")]),_("br"),v._v("\n名称: Pylance (由 Microsoft 发布) "),_("br"),v._v("\n功能: 基于 TypeScript 的智能代码补全、类型检查、代码导航（依赖静态类型推断）。"),_("br"),v._v('\n配置: 在设置中启用 "python.languageServer": "Pylance"。 '),_("br"),v._v(" "),_("br"),v._v(" "),_("b",[v._v("(3) Jupyter ")]),_("br"),v._v("\n名称: Jupyter (由 Microsoft 发布) "),_("br"),v._v("\n功能: 在 VSCode 内直接编写和运行 Jupyter Notebook（.ipynb 文件），适合数据分析、机器学习。"),_("br"),v._v(" "),_("br"),v._v(" "),_("b",[v._v("(4) 代码格式化工具 ")]),_("br"),v._v("\n推荐插件: "),_("br"),v._v("\nautopep8（自动格式化 Python 代码）"),_("br"),v._v("\nblack（更严格的代码格式化工具，需通过 "),_("code",[v._v("pip install black")]),v._v(" 安装）"),_("br"),v._v("\n配置: "),_("br"),v._v("\n在 VSCode 设置中指定格式化工具："),_("br")]),v._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"python.formatting.provider"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"black"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("  "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v('// 或 "autopep8"')]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"editor.formatOnSave"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[v._v("true")]),v._v("\n")])])]),_("p",[_("b",[v._v("(5) 智能补全增强 ")]),_("br"),v._v("\n名称: Python IntelliCode (由 Microsoft 发布) "),_("br"),v._v("\n功能: 基于 AI 的代码建议，优先推荐常用代码模式。 "),_("br"),v._v(" "),_("b",[v._v("(6) 环境管理 ")]),_("br"),v._v("\n名称: Python Environment Manager "),_("br"),v._v("\n功能: 可视化管理 Conda、Virtualenv 等 Python 虚拟环境。 "),_("br")])]),v._v(" "),_("h3",{attrs:{id:"_3-可选插件-按需安装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-可选插件-按需安装"}},[v._v("#")]),v._v(" 3. 可选插件（按需安装）")]),v._v(" "),_("blockquote",[_("p",[_("b",[v._v("测试框架: ")]),_("br"),v._v("\npytest（需 pip install pytest）: 单元测试支持。"),_("br"),v._v("\nTest Explorer UI: 可视化测试结果。"),_("br"),v._v(" "),_("b",[v._v("调试工具: ")]),_("br"),v._v("\nCode Runner: 一键运行代码片段。 "),_("br"),v._v(" "),_("b",[v._v("数据库支持: ")]),_("br"),v._v("\nSQLite: 编辑和查询 SQLite 数据库。"),_("br"),v._v(" "),_("b",[v._v("远程开发: ")]),_("br"),v._v("\nRemote - SSH: 通过 SSH 连接远程服务器开发。"),_("br"),v._v(" "),_("b",[v._v("代码质量:")]),_("br"),v._v("\nflake8 或 pylint: 静态代码检查（需 pip install flake8/pylint）。"),_("br")])]),v._v(" "),_("h3",{attrs:{id:"_4-配置建议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置建议"}},[v._v("#")]),v._v(" 4. 配置建议")]),v._v(" "),_("blockquote",[_("p",[_("b",[v._v("快捷键绑定")]),_("br"),v._v("\n使用 "),_("code",[v._v("Ctrl+Shift+P")]),v._v(" 搜索 "),_("code",[v._v("Python: Select Interpreter")]),v._v(" 选择当前项目的 "),_("code",[v._v("Python 环境")]),v._v("。"),_("br"),v._v(" "),_("b",[v._v("调试配置")]),_("br"),v._v("\n按 "),_("code",[v._v("F5")]),v._v(" 启动调试，VSCode 会自动生成调试配置文件"),_("code",[v._v("（launch.json）")]),v._v("。"),_("br"),v._v(" "),_("b",[v._v("集成终端")]),_("br"),v._v("\n按 Ctrl+`  打开终端，直接运行 Python 脚本或激活虚拟环境。"),_("br")])]),v._v(" "),_("h3",{attrs:{id:"_5-示例开发流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-示例开发流程"}},[v._v("#")]),v._v(" 5. 示例开发流程")]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("创建或打开一个 Python 项目文件夹。")]),v._v(" "),_("li",[v._v("编写代码时，"),_("code",[v._v("Pylance")]),v._v(" 和 "),_("code",[v._v("IntelliCode")]),v._v(" 会提供实时建议。")]),v._v(" "),_("li",[v._v("按 "),_("code",[v._v("Ctrl+S")]),v._v(" 保存时自动格式化代码。")]),v._v(" "),_("li",[v._v("按 "),_("code",[v._v("F5")]),v._v(" 调试代码，或在终端输入 "),_("code",[v._v("python app.py")]),v._v(" 运行。"),_("br"),v._v(" "),_("br"),v._v("\n通过上述配置，VSCode 将具备完整的 Python IDE 功能，包括代码编写、调试、测试、环境管理等，满足从简单脚本到大型项目的开发需求。")])])])]),v._v(" "),_("h2",{attrs:{id:"四、在vscode中运行python程序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、在vscode中运行python程序"}},[v._v("#")]),v._v(" 四、在vscode中运行python程序")]),v._v(" "),_("blockquote",[_("ol",[_("li",[v._v("设置python代码字母跟随滚轮变大缩小："),_("code",[v._v("设置")]),v._v(" -> "),_("code",[v._v("文本编辑器")]),v._v(" -> "),_("code",[v._v("字体")]),v._v(" -> "),_("code",[v._v("在 settings.json 中编辑")])])]),v._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    ...\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"editor.mouseWheelZoom"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[v._v("true")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])]),_("ol",{attrs:{start:"2"}},[_("li",[v._v("自动补全括号")])]),v._v(" "),_("div",{staticClass:"language-json extra-class"},[_("pre",{pre:!0,attrs:{class:"language-json"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    ...\n    "),_("span",{pre:!0,attrs:{class:"token property"}},[v._v('"python.analysis.completeFunctionParens"')]),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),_("span",{pre:!0,attrs:{class:"token boolean"}},[v._v("true")]),v._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])])]),_("ol",{attrs:{start:"3"}},[_("li",[v._v("补全代码插件 "),_("code",[v._v("python-snippets")])])])]),v._v(" "),_("h2",{attrs:{id:"五、-python-虚拟环境"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五、-python-虚拟环境"}},[v._v("#")]),v._v(" 五、 python 虚拟环境")]),v._v(" "),_("blockquote",[_("p",[v._v("注意，我们在做python 项目开发的时候，不会直接调用我们安装的python解释器，而是用虚拟环境，比如我们用到"),_("code",[v._v("Python 3.12.10")]),v._v(" 解释器，那么我们会虚拟出"),_("code",[v._v("Python 3.12.10")]),v._v("的环境，与当前开发的项目进行绑定。"),_("br"),v._v("\n那为何要用虚拟环境呢？ 我们在前面安装"),_("code",[v._v("Python")]),v._v(" 解释器的时候，给大家分析过安装目录，里面有一个 "),_("code",[v._v("Scripts")]),v._v("文件夹，里面有"),_("code",[v._v("pip.exe")]),v._v("文件，这个文件类似于我们"),_("code",[v._v("node")]),v._v("里面的"),_("code",[v._v("npm")]),v._v(",用于安装第三方模块、组件、库等等。比如，当我们用 "),_("code",[v._v("python3")]),v._v("的时候，通过  "),_("code",[v._v("pip3 -V")]),v._v(" 可以看到第三方模块或者库等会放在"),_("code",[v._v("D:\\Python312\\Lib\\site-packages\\pip (python 3.12)")]),v._v("里面，这里可以类比我们的"),_("code",[v._v("node")]),v._v("通过"),_("code",[v._v("npm")]),v._v("安装第三方模块或者库放在"),_("code",[v._v("node_modules")]),v._v("文件夹里面。")])]),v._v(" "),_("h3",{attrs:{id:"_1-在vscode中创建python-虚拟环境"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-在vscode中创建python-虚拟环境"}},[v._v("#")]),v._v(" 1. 在vscode中创建python 虚拟环境")]),v._v(" "),_("blockquote",[_("p",[_("code",[v._v("选择项目目录打开终端")]),v._v(" -> 比如用 "),_("code",[v._v("python3")]),v._v("的解释器：")]),v._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// python3 -m venv 固定写法，后面跟虚拟环境的名字，比如：.venv（名字随便，前面有点）")]),v._v("\n python3 "),_("span",{pre:!0,attrs:{class:"token operator"}},[v._v("-")]),v._v("m venv "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("venv\n")])])])]),v._v(" "),_("p",[v._v("之后，关掉终端，重新运行项目，会发现使用的是"),_("code",[v._v("(.venv)虚拟环境")])])])}),[],!1,null,null,null);_.default=e.exports}}]);